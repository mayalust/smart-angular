<config injector="psCommand,$rootScope,$timeout" type="factory"
></config>
<script type="text/javascript">
  export default function(psCommand,rootScope,timeout){
    return function(target, option, parentList, dom){
      let replacer = document.createComment(`移动节点`),
        helper = document.createElement(`div`),
        freeboard = document.getElementById(`freeboard`),
        parent = dom && dom.parentElement,
        offset = [ 10 , 10 ];
      target.onmousedown = onmousedown;
      helper.setAttribute(`class`, `helper`);
      function setPos(x, y){
        helper.style.top = `${y}px`;
        helper.style.left = `${x}px`;
      }
      function clone(obj){
        return JSON.parse(JSON.stringify(obj));
      }
      function onmousedown(e){
        parent && parent.replaceChild(replacer, dom);
        document.onmouseup = onmouseup;
        rootScope.$broadcast(`freeboard:changed`)
        document.body.append(helper);
        setPos(e.pageX - offset[0], e.pageY - offset[1]);
        timeout(() => {
          freeboard.setAttribute(`class`, `mousedown`);
        });
        target.onmousedown = null;
        window.onmousemove = function(e){
          setPos(e.pageX - offset[0], e.pageY - offset[1]);
        }
      }
      function onmouseup(e){
        rootScope.$apply(() => {
          let domtarget = e.target, list;
          if(domtarget.__isColEnd__ == true){
            list = domtarget.__parentList__;
            if(parentList){
              psCommand.add([
                psCommand.remove(parentList, parentList.indexOf(option)),
                psCommand.append(list, option)
              ]);
            } else {
              psCommand.add([
                psCommand.append(list, clone(option))
              ]);
            }
          } else if(domtarget.__isColHead__ == true){
            list = domtarget.__parentList__;
            inx = domtarget.__index__;
            if(parentList){
              psCommand.insert([
                psCommand.remove(parentList, parentList.indexOf(option)),
                psCommand.insert(list, option, inx)
              ]);
            } else {
              psCommand.insert([
                psCommand.insert(list, clone(option), inx)
              ]);
            }
          }
          parent && parent.replaceChild(dom, replacer)
          document.onmouseup = null;
          target.onmousedown = onmousedown;
          freeboard.removeAttribute(`class`);
          timeout(() => {
            rootScope.$broadcast(`freeboard:changed`)
          }, 200);
          helper.remove();
          window.onmousemove = null;
        });
      }
    };
  }
</script>